// <auto-generated />
using CSharpEntityFrameworkPlayers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSharpEntityFrameworkPlayers.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20221222151219_ModificheTabelle")]
    partial class ModificheTabelle
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CSharpEntityFrameworkPlayers.Player", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerID"));

                    b.Property<int>("MatchAttended")
                        .HasColumnType("int");

                    b.Property<int>("MatchWon")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PlayerID");

                    b.HasIndex("PlayerID")
                        .IsUnique();

                    b.HasIndex("TeamName");

                    b.ToTable("player");
                });

            modelBuilder.Entity("CSharpEntityFrameworkPlayers.Team", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("TeamName");

                    b.ToTable("team");
                });

            modelBuilder.Entity("CSharpEntityFrameworkPlayers.Player", b =>
                {
                    b.HasOne("CSharpEntityFrameworkPlayers.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("CSharpEntityFrameworkPlayers.Team", b =>
                {
                    b.HasOne("CSharpEntityFrameworkPlayers.Team", null)
                        .WithMany("Teams")
                        .HasForeignKey("TeamName");
                });

            modelBuilder.Entity("CSharpEntityFrameworkPlayers.Team", b =>
                {
                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
